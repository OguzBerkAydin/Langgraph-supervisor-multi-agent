import streamlit as st
import requests
import json

st.set_page_config(page_title="Resmi Gazete & Haber AjanÄ±", page_icon="ğŸ“°")

st.title("ğŸ“° Resmi Gazete & Haber Sorgu Sistemi")
st.markdown("Resmi Gazete'de yayÄ±mlanan belgeler ve gÃ¼ncel haberler hakkÄ±nda sorular sorabilirsiniz.")

# Sohbet geÃ§miÅŸini sakla
if "messages" not in st.session_state:
    st.session_state.messages = []

# GeÃ§miÅŸ mesajlarÄ± gÃ¶ster
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# KullanÄ±cÄ± giriÅŸi
user_input = st.chat_input("Sorunuzu girin...")

# Debug modu
debug_mode = st.sidebar.checkbox("Debug Modu", False)

if user_input:
    # KullanÄ±cÄ± mesajÄ±nÄ± gÃ¶ster
    with st.chat_message("user"):
        st.markdown(user_input)
    
    # KullanÄ±cÄ± mesajÄ±nÄ± geÃ§miÅŸe ekle
    st.session_state.messages.append({"role": "user", "content": user_input})
    
    # API isteÄŸi gÃ¶nder
    with st.chat_message("assistant"):
        with st.spinner("YanÄ±t hazÄ±rlanÄ±yor..."):
            try:
                response = requests.post(
                    "http://api:8000/analyze_chat",
                    json={"message": user_input, "debug": debug_mode}
                )
                
                if response.status_code == 200:
                    data = response.json()
                    
                    # Ana yanÄ±tÄ± gÃ¶ster
                    if "response" in data and data["response"]:
                        st.markdown(data["response"])
                        # YanÄ±tÄ± geÃ§miÅŸe ekle
                        st.session_state.messages.append({"role": "assistant", "content": data["response"]})
                    
                    # Debug modu aÃ§Ä±ksa adÄ±mlarÄ± gÃ¶ster
                    if debug_mode and "steps" in data:
                        st.divider()
                        st.subheader("Debug Bilgileri")
                        steps_container = st.expander("Ä°ÅŸlem AdÄ±mlarÄ±", expanded=True)
                        with steps_container:
                            for i, step in enumerate(data["steps"], start=1):
                                st.markdown(f"**AdÄ±m {i}**")
                                st.code(step, language="json")
                                st.divider()
                
                else:
                    st.error(f"API hatasÄ±: {response.status_code}")
                    if response.text:
                        st.code(response.text)
                        
            except Exception as e:
                st.error(f"BaÄŸlantÄ± hatasÄ±: {e}")

# Kenar Ã§ubuÄŸu ayarlarÄ±
st.sidebar.title("HakkÄ±nda")
st.sidebar.info("""
Bu uygulama, Resmi Gazete'de yayÄ±mlanan belgeler ve gÃ¼ncel haberler hakkÄ±nda 
sorgulamalar yapmanÄ±za olanak tanÄ±r. LangGraph teknolojisiyle 
gÃ¼Ã§lendirilmiÅŸtir.
""")

if debug_mode:
    st.sidebar.warning("""
    Debug modu aÃ§Ä±k. Ä°ÅŸlem adÄ±mlarÄ±nÄ±n detaylarÄ± gÃ¶sterilecektir.
    """)